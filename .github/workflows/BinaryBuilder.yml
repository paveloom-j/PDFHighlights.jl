name: BinaryBuilder

on:
  push:
    branches:
      - binaries

env:
  package_name: PDFHighlights_jll
  path_to_package: /home/runner/.julia/dev/PDFHighlights_jll

jobs:
  BinaryBuilder:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [
          i686-linux-gnu,
          x86_64-linux-gnu,
          aarch64-linux-gnu,
          armv7l-linux-gnueabihf,
          powerpc64le-linux-gnu,
          i686-linux-musl,
          x86_64-linux-musl,
          aarch64-linux-musl,
          armv7l-linux-musleabihf
        ]
        cxx: [cxx03, cxx11]
    name: ${{ matrix.arch }}-${{ matrix.cxx }}
    steps:
      - name: Checkout the branch
        uses: actions/checkout@v2
      - name: Install Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: 1.5
          arch: x64
      - name: Install BinaryBuilder
        run: julia -e 'using Pkg; Pkg.add("BinaryBuilder")'
      - name: Build Binaries
        run: julia --color=yes build_tarballs.jl --verbose --deploy=local ${{ matrix.arch }}-${{ matrix.cxx }}
      - name: Test the package
        if: ${{ matrix.arch == 'x86_64-linux-gnu' }}
        run: |
          cp -r test ${{ env.path_to_package }}
          julia --project="${{ env.path_to_package }}" -e 'using Pkg; Pkg.add("Test"); Pkg.test()'
      - name: Upload the package
        if: ${{ matrix.arch == 'x86_64-linux-gnu' }}
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: |
            ${{ env.path_to_package }}
      - name: Upload the binaries
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.arch }}-${{ matrix.cxx }}
          path: |
            products/*.tar.gz
